# Generated by Django 5.1 on 2024-11-18 22:46

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Partida",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(help_text="Nombre de la partida", max_length=100),
                ),
                (
                    "fecha_hora",
                    models.DateTimeField(help_text="Fecha y hora de la partida"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Videojuego",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        help_text="Nombre del videojuego", max_length=100, unique=True
                    ),
                ),
                (
                    "imagen",
                    models.ImageField(
                        blank=True,
                        help_text="Imagen del videojuego",
                        null=True,
                        upload_to="videojuegos/",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        help_text="Nombre completo del usuario", max_length=100
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Correo electrónico único",
                        max_length=254,
                        unique=True,
                    ),
                ),
                (
                    "dni",
                    models.CharField(
                        help_text="Documento de identidad único",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True, help_text="Número de teléfono", max_length=15
                    ),
                ),
                (
                    "alias",
                    models.CharField(
                        help_text="Alias visible para otros usuarios",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Determina si el usuario está activo"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Determina si el usuario puede acceder al admin",
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Determina si el usuario es superusuario",
                    ),
                ),
                (
                    "estadisticas",
                    models.JSONField(
                        blank=True,
                        help_text="Estadísticas generales del usuario",
                        null=True,
                    ),
                ),
                (
                    "partidas_ganadas_totales",
                    models.IntegerField(
                        default=0, help_text="Número total de partidas ganadas"
                    ),
                ),
                (
                    "puntos_totales",
                    models.IntegerField(
                        default=0, help_text="Puntos totales acumulados"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EstadisticasVideojuego",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "videojuego",
                    models.CharField(help_text="Nombre del videojuego", max_length=100),
                ),
                ("partidas_ganadas", models.IntegerField(default=0)),
                ("partidas_perdidas", models.IntegerField(default=0)),
                ("puntos", models.IntegerField(default=0)),
                (
                    "jugador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="estadisticas_videojuego",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Participacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "puntaje",
                    models.IntegerField(
                        default=0, help_text="Puntaje del jugador en la partida"
                    ),
                ),
                (
                    "resultado",
                    models.CharField(
                        blank=True,
                        help_text="Resultado (ganador, perdedor, empate, etc.)",
                        max_length=100,
                    ),
                ),
                (
                    "tiempo_jugado",
                    models.DurationField(
                        blank=True, help_text="Duración de la participación", null=True
                    ),
                ),
                (
                    "otras_estadisticas",
                    models.JSONField(
                        blank=True,
                        help_text="Otras estadísticas del jugador",
                        null=True,
                    ),
                ),
                (
                    "jugador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "partida",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participaciones",
                        to="catalog.partida",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Resultado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(
                        help_text="Descripción del resultado", max_length=100
                    ),
                ),
                ("puntaje", models.IntegerField(help_text="Puntaje final del jugador")),
                ("otras_estadisticas", models.JSONField(blank=True, null=True)),
                (
                    "participacion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resultados",
                        to="catalog.participacion",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Torneo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(help_text="Nombre del torneo", max_length=100),
                ),
                (
                    "codigo",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "clasif_sistem",
                    models.CharField(
                        help_text="Sistema de clasificación (puntos, eliminatoria, etc.)",
                        max_length=100,
                    ),
                ),
                ("reglas", models.TextField(help_text="Reglas del torneo")),
                (
                    "fecha_inicio",
                    models.DateField(help_text="Fecha de inicio del torneo"),
                ),
                (
                    "fecha_fin",
                    models.DateField(help_text="Fecha de finalización del torneo"),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("p", "Pendiente"),
                            ("c", "En curso"),
                            ("f", "Finalizado"),
                            ("canc", "Cancelado"),
                        ],
                        default="p",
                        help_text="Estado actual del torneo",
                        max_length=20,
                    ),
                ),
                (
                    "n_participantes",
                    models.PositiveIntegerField(
                        help_text="Número de participantes requerido para comenzar"
                    ),
                ),
                (
                    "premio",
                    models.JSONField(
                        help_text='Premios del torneo (ejemplo: {"1°": "Premio 1"})'
                    ),
                ),
                (
                    "ganadores",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="torneos_ganados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "jugadores",
                    models.ManyToManyField(
                        blank=True, related_name="torneos", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "videojuego",
                    models.ForeignKey(
                        help_text="Videojuego asociado al torneo",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalog.videojuego",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="partida",
            name="torneo",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="partidas",
                to="catalog.torneo",
            ),
        ),
        migrations.AddField(
            model_name="partida",
            name="videojuego",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="catalog.videojuego"
            ),
        ),
    ]
